<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客搭建局部记录（仅供自己翻阅）</title>
      <link href="/wang-ye-ju-bu-pei-zhi/"/>
      <url>/wang-ye-ju-bu-pei-zhi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=32303030&auto=1&height=66" ></iframe></div><p>hexo+github搭建博客的完整教学直接看<a href="https://zhuanlan.zhihu.com/p/35668237">这篇</a>，下面是我搭建过程中查阅资料的记录，十分感谢大佬们的无私奉献。</p><h2 id="一、-相关环境的搭建"><a href="#一、-相关环境的搭建" class="headerlink" title="一、 相关环境的搭建"></a>一、 相关环境的搭建</h2><h3 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1. 安装node.js"></a>1. 安装node.js</h3><p>Node.js 是一个事件驱动 I&#x2F;O 服务端 JavaScript 环境，基于 Google 的 V8 引擎，V8 引擎执行 Javascript 的速度非常快，性能非常好。</p><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：</p><ul><li>允许用户从NPM服务器下载别人编写的第三方包到本地使用。</li><li>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</li><li>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。</li></ul><p><a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">上文内容来源</a></p><br/><p>去<a href="https://nodejs.org/en/download/">node.js</a>,下载node.js，npm和它是捆绑在一块的。</p><p>可用node-v和npm -v查看node.js和npm的版本，我的如下</p><p>node ：v12.22.1    </p><p>npm：6.14.12</p><p>没有梯子可以添加国内镜像源：</p><pre class="line-numbers language-shell"><code class="language-shell">npm config set registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2. 安装hexo"></a>2. 安装hexo</h3><p>npm安装其他包的指令：</p><pre class="line-numbers language-shell"><code class="language-shell">npm install xxx xxx为包的名字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我要装hexo，运行：</p><pre class="line-numbers language-shell"><code class="language-shell">npm install hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>-g的意思为 将模块安装到全局（全局路径可以通过<strong>npm root -g</strong>查看）</p><p>比如我的是 &#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules（你用npm安装时它会生成一个node_modules的文件夹来保存模块）。</p><p>可用<strong>hexo -v</strong>查看hexo 是否安装成功。</p><h3 id="3-新建项目"><a href="#3-新建项目" class="headerlink" title="3. 新建项目"></a>3. 新建项目</h3><p>比如我的项目名字叫<strong>test</strong>，在其中<strong>新建一个叫Hexo的文件夹</strong>，并在Hexo中运行下面两行命令来初始化hexo相关组件，结果如下<strong>图1</strong>所示：</p><pre class="line-numbers language-shell"><code class="language-shell">hexo init npm install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/wang-ye-ju-bu-pei-zhi/hexo_init%E7%BB%93%E6%9E%9C.png" class="" title="图1：hexo init 后Hexo文件夹"><blockquote><p>提一下 package.json这个文件，这个文件主要是用来记录这个项目的详细信息的，它会将我们在项目开发中所要用到的包，以及项目的详细信息等记录在这个项目中。如<strong>图2</strong>所示：</p><img src="/wang-ye-ju-bu-pei-zhi/package.json%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9.png" class="" title="图2: package.json文件内容"><pre class="line-numbers language-shell"><code class="language-shell">npm install --save xxx`  简写：npm install -s xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这种方法会将下载的模块信息写入到 package.json 中的dependencies列表中。</p><p>参考自：<a href="https://blog.csdn.net/weixin_51369544/article/details/120197353">戴某) npm安装与使用</a></p></blockquote><h3 id="4-安装git及github与本地项目连接"><a href="#4-安装git及github与本地项目连接" class="headerlink" title="4. 安装git及github与本地项目连接"></a>4. 安装git及github与本地项目连接</h3><p>安装git和github建项目与本地项目连接直接看大佬<a href="https://zhuanlan.zhihu.com/p/35668237">这篇</a>，我自己懒得再敲一遍了。</p><h4 id="5-hexo常用命令（引自这篇）："><a href="#5-hexo常用命令（引自这篇）：" class="headerlink" title="5. hexo常用命令（引自这篇）："></a>5. hexo常用命令（引自<a href="https://zhuanlan.zhihu.com/p/11161411">这篇</a>）：</h4><ul><li>hexo s等价于 hexo server #Hexo 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</li><li>hexo g 等价于 hexo generate #生成静态网页 (执行 $ hexo g 后会在站点根目录下生成public&gt;文件夹, hexo会将”&lt;font &#x2F;blog&#x2F;source&#x2F;“ 下面的.md后缀的文件编译为.html后缀的文件,存放在”&#x2F;blog&#x2F;public&#x2F; “ 路径下)</li><li>hexo d 等价于 hexo deploy #将本地数据部署到远端服务器(如github)</li><li>hexo clean #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹</li></ul><h4 id="6-Hexo主题："><a href="#6-Hexo主题：" class="headerlink" title="6. Hexo主题："></a>6. Hexo主题：</h4><p><a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>如何使用该主题及其配置，讲得非常详细。</p><p>在文章中加入网易云音乐，网易云找到歌歌单后生成外链，直接塞到文章里即可。</p><h2 id="二、-关于文章"><a href="#二、-关于文章" class="headerlink" title="二、 关于文章"></a>二、 关于文章</h2><h3 id="1-发布文章"><a href="#1-发布文章" class="headerlink" title="1. 发布文章"></a>1. 发布文章</h3><p>建议先在根目录的<code>_config.yml</code>设置</p><pre><code>post_asset_folder: true </code></pre><p>这能够在你发布新文章的md时，同时生成一个同名文件夹来保存资源。这样做可以让等等在写文章时以相对路径的方式来调用图片，非常简便。</p><p>发布新文章，比如:</p><pre class="line-numbers language-shell"><code class="language-shell">hexo new post "xxx"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再<strong>source&#x2F;_post</strong>下可以看到一个xxx.md和xxx的文件夹，你可以把这篇文章使用到的图片放到文件夹中，然后在md中调用该图片的方法是：</p><p>其中，example.jpg是文件夹中的图片名字， 后面那个是图的注释。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token entity" title="&#123;">&amp;#123;</span>% asset_img example.jpg This is an example image %<span class="token entity" title="&#125;">&amp;#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>详细讲解可见<a href="https://hexo.io/zh-cn/docs/asset-folders">此文</a>。</p><p>关于文献引用时的语法见<a href="https://murphy.tech/posts/49cc9dcc.htm">下图3</a>:</p><img src="/wang-ye-ju-bu-pei-zhi/%E5%BC%95%E7%94%A8%E6%96%87%E7%8C%AE.png" class="" title="图3: 引用文献的语法"><h3 id="2-缩短文章对应的网址以便SEO"><a href="#2-缩短文章对应的网址以便SEO" class="headerlink" title="2. 缩短文章对应的网址以便SEO"></a>2. 缩短文章对应的网址以便SEO</h3><p>在根目录的<code>_config.yml</code>文件下修改permalink如下：</p><pre class="line-numbers language-text"><code class="language-text"># permalink: :year/:month/:day/:title/permalink: :title/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="三、-音乐播放"><a href="#三、-音乐播放" class="headerlink" title="三、 音乐播放"></a>三、 音乐播放</h2><p><a href="https://blog.17lai.site/posts/cf0f47fd/#%E6%8F%92%E5%85%A5%E9%9F%B3%E4%B9%90%E5%92%8C%E8%A7%86%E9%A2%91">这篇</a>+<a href="https://github.com/metowolf/MetingJS#option">这篇</a></p><h2 id="四、-live2d（看板娘）设置"><a href="#四、-live2d（看板娘）设置" class="headerlink" title="四、 live2d（看板娘）设置"></a>四、 live2d（看板娘）设置</h2><h3 id="1-大佬版的流程"><a href="#1-大佬版的流程" class="headerlink" title="1. 大佬版的流程"></a>1. <a href="https://zhuanlan.zhihu.com/p/58325389">大佬版的流程</a></h3><p>下图4来源自4.1. 的教程</p><p><a href="https://github.com/stevenjoezhang/live2d-widget">大佬的live2d链接</a></p><img src="/wang-ye-ju-bu-pei-zhi/live2d.png" class="" title="图4: 大佬版的live2d添加流程"><h3 id="2-基础版的流程"><a href="#2-基础版的流程" class="headerlink" title="2. 基础版的流程"></a>2. 基础版的流程</h3><p>下文内容来源：<a href="https://blog.yleao.com/2018/0805/hexo%E4%B8%8A%E7%9A%84live2d%E5%BA%94%E7%94%A8.html">hexo上的live2d应用</a>（写的真是太好了啊啊）</p><h4 id="2-1-安装hexo-helper-live2d"><a href="#2-1-安装hexo-helper-live2d" class="headerlink" title="2.1. 安装hexo-helper-live2d"></a>2.1. 安装<a href="https://github.com/EYHN/hexo-helper-live2d">hexo-helper-live2d</a></h4><pre class="line-numbers language-shell"><code class="language-shell">npm install --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br/><h4 id="2-2-配置根目录下的-config-yml"><a href="#2-2-配置根目录下的-config-yml" class="headerlink" title="2.2. 配置根目录下的_config.yml"></a>2.2. 配置根目录下的_config.yml</h4><pre class="line-numbers language-yml"><code class="language-yml">## Live2D## https://github.com/EYHN/hexo-helper-live2dlive2d:    enable: true  # enable: false    scriptFrom: local # 默认    pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)    pluginJsPath: lib/ # 脚本文件相对与插件根目录路径    pluginModelPath: assets/ # 模型文件相对与插件根目录路径  # scriptFrom: jsdelivr # jsdelivr CDN  # scriptFrom: unpkg # unpkg CDN  # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url    tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中    debug: false # 调试, 是否在控制台输出日志    model:      use: live2d-widget-model-wanko # npm-module package name    # use: wanko # 博客根目录/live2d_models/ 下的目录名    # use: ./wives/wanko # 相对于博客根目录的路径    # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url    display: # 模型位置，根据不同的模型自行调整      position: right      width: 150      height: 300    mobile: # 是否适用于移动端      show: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-模型的挑选"><a href="#2-3-模型的挑选" class="headerlink" title="2.3. 模型的挑选"></a>2.3. 模型的挑选</h4><h5 id="方法一：https-github-com-xiazeyu-live2d-widget-models"><a href="#方法一：https-github-com-xiazeyu-live2d-widget-models" class="headerlink" title="方法一：https://github.com/xiazeyu/live2d-widget-models"></a><strong>方法一</strong>：<a href="https://github.com/xiazeyu/live2d-widget-models">https://github.com/xiazeyu/live2d-widget-models</a></h5><p>按照上面的方式装完模型后，它会存储在Hexo&#x2F;node_modules，然后将包名输入位于<code>_config.yml</code>的<code>model.use</code>中。</p></br><h5 id="方法二：live2d-models子目录名称"><a href="#方法二：live2d-models子目录名称" class="headerlink" title="方法二：live2d_models子目录名称"></a><strong>方法二：live2d_models子目录名称</strong></h5><ul><li><p>在博客根目录下创建一个<code>live2d_models</code>文件夹.</p></li><li><p>在此文件夹内新建一个子文件夹.</p></li><li><p>将你的 Live2D 模型复制到这个子文件夹中.</p></li><li><p>将子文件夹的名称输入<code>_config.yml</code>的<code>model.use</code>中. 　　</p><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5></li><li><p>你的模型叫mymiku.</p></li><li><p>在博客根目录 (应当有<code>_config.yml</code>、<code>sources</code>、<code>themes</code>) 新建名为<code>live2d_models</code>的目录，再在其中建一个名为<code>mymiku</code>的子文件夹.</p></li><li><p>将模型复制到 <code>/live2d_models/mymiku/</code>中.现在在此文件夹里应当有一个 <code>.model.json</code>文件 (例如<code>mymiku.model.json</code>)</p></li><li><p>将 子文件夹名称<code>mymiku</code>输入到位于根目录<code>_config.yml</code>的<code>model.use</code>中</p></li></ul><h4 id="2-4-模型的来源"><a href="#2-4-模型的来源" class="headerlink" title="2.4. 模型的来源"></a>2.4. 模型的来源</h4><p>最后再贴一个在github上找到的模型，种类挺多，可预览，<a href="https://github.com/summerscar/live2dDemo">github地址</a>。<br>修改modelname进行预览，modelname可在<a href="https://github.com/summerscar/live2dDemo/blob/master/README.md">这里</a>查阅，<a href="http://summerscar.me/live2dDemo/">预览地址</a>。<br>使用方法很简单，打包下载下来，解压后在<code>/live2dDemo-master/assets/</code>中找到喜欢的模型，按照上面<strong>2.3.</strong> 中的方法二，直接把模型所在的文件夹拖入到博客根目录中的<code>live2d_models</code>里，再修改<code>_config.yml</code> 里的 <code>model.use</code>即可。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图卷积神经网络学习</title>
      <link href="/tu-juan-ji-shen-jing-wang-luo-xue-xi/"/>
      <url>/tu-juan-ji-shen-jing-wang-luo-xue-xi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><img src="/tu-juan-ji-shen-jing-wang-luo-xue-xi/dogy.jpg" class="" title="xxx">]]></content>
      
      
      <categories>
          
          <category> 图卷积神经网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图卷积神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.<br>十分感谢大佬做出这么优秀的主题！<br>本博客参考来源：</p><p><a href="https://zhuanlan.zhihu.com/p/111614119">1. 知乎：Hexo+Github个人博客搭建美化</a><br><a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">2. Hexo博客主题之hexo-theme-matery的介绍</a><br><a href="https://blog.17lai.site/posts/cf0f47fd/#%E6%8F%92%E5%85%A5%E9%9F%B3%E4%B9%90%E5%92%8C%E8%A7%86%E9%A2%91">3. Hexo Markdown以及各种插件功能测试</a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
